%% Add path
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
addpath(genpath('../'));
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------

%% Get data
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
fprintf(1,'Getting data ...\n');
load('data_ref_paper_sep.mat');
NDem = length(x); % number of demonstrations
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------

%% Initialize roobot model and the Regressors for the constraint and main task
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
fprintf(1,'Defining robot model ...\n');
DH = [0.0, 0.31, 0.0, pi/2; % Robot Kinematic model specified by the Denavit-Hartenberg
      0.0, 0.0, 0.0, -pi/2;
      0.0, 0.4, 0.0, -pi/2;
      0.0, 0.0, 0.0, pi/2;
      0.0, 0.39, 0.0, pi/2;
      0.0, 0.0, 0.0, -pi/2;
      0.0, 0.21-0.132, 0.0, 0.0];
robot = SerialLink(DH); % Peters Cork robotics library has to be installed
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------

%% Compute centres and operational trajectory
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
fprintf(1,'Compute end-effector positions ...\n');
p = cell(1, NDem); % end-effector cartesian position in global frame
getPos = @(q) transl(robot.fkine(q)); % compute end-effector postion
for idx=1:NDem
    p{idx} = getPos(cell2mat(x{idx}).'); % compute end-effector postion
end
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------

%% Plot end-effector positions
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
fprintf(1,'Plotting Results...\n');
figure(); hold on;
col=jet(NDem);
%col = col(randperm(NDem),:);
legendInfo = cell(1, NDem);
for idx=1:NDem
    % plot
    plot3(p{idx}(:,1),p{idx}(:,2),p{idx}(:,3),'color',col(idx,:), 'LineWidth', 3);
    legendInfo{idx} = strcat('dem. ',int2str(idx)); % or whatever is appropriate
    grid on;
    axis square;
end
legend(legendInfo);
xlabel('x [m]');
ylabel('y [m]');
zlabel('z [m]');
view(50,25);
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------

%% Remove path
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
rmpath(genpath('../'));
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------